[0.008s] Invoking command in '/home/parallels/calib_ws/build/hand_eye_calibration': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/humble /usr/bin/cmake --build /home/parallels/calib_ws/build/hand_eye_calibration -- -j2 -l2
[0.105s] [ 25%] [32mBuilding CXX object CMakeFiles/calibration_node.dir/src/calibration_node.cpp.o[0m
[0.121s] [ 75%] Built target scan_processing_node
[3.451s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:[m[K In member function â€˜[01m[KEigen::Matrix4d CalibrationNode::compute_T_cam_ee(std::vector<Eigen::Matrix<double, 4, 4> >, std::vector<std::vector<Eigen::Matrix<double, 4, 1> > >&, std::vector<std::vector<Eigen::Matrix<double, 4, 1> > >&)[m[Kâ€™:
[3.453s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:54:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand types are â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ and â€˜[01m[KEigen::MatrixXd[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<double, -1, -1>[m[Kâ€™})
[3.454s]   339 |             MatrixXd matrixProduct = [32m[KX_mat.transpose[m[K [01;31m[K*[m[K [34m[KX_prime_mat[m[K;
[3.454s]       |                                      [32m[K~~~~~~~~~~~~~~~[m[K [01;31m[K^[m[K [34m[K~~~~~~~~~~~[m[K
[3.454s]       |                                            [32m[K|[m[K           [34m[K|[m[K
[3.454s]       |                                            [32m[K|[m[K           [34m[KEigen::MatrixXd {aka Eigen::Matrix<double, -1, -1>}[m[K
[3.454s]       |                                            [32m[K<unresolved overloaded function type>[m[K
[3.454s] In file included from [01m[K/usr/include/eigen3/Eigen/Core:50[m[K,
[3.454s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
[3.454s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.454s] [01m[K/usr/include/c++/11/complex:392:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)[m[Kâ€™
[3.454s]   392 |     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)
[3.454s]       |     [01;36m[K^~~~~~~~[m[K
[3.454s] [01m[K/usr/include/c++/11/complex:392:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.454s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™ and â€˜[01m[KEigen::DenseBase<Eigen::Matrix<double, -1, -1> >::ConstTransposeReturnType (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™ {aka â€˜[01m[Kconst Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™}
[3.455s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.455s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.455s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™ and â€˜[01m[KEigen::Transpose<Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)()[m[Kâ€™
[3.455s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::MatrixXd[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<double, -1, -1>[m[Kâ€™} is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
[3.455s] In file included from [01m[K/usr/include/eigen3/Eigen/Core:50[m[K,
[3.455s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
[3.455s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.455s] [01m[K/usr/include/c++/11/complex:401:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&) [with _Tp = Eigen::Matrix<double, -1, -1>][m[Kâ€™
[3.455s]   401 |     [01;36m[Koperator[m[K*(const complex<_Tp>& __x, const _Tp& __y)
[3.455s]       |     [01;36m[K^~~~~~~~[m[K
[3.455s] [01m[K/usr/include/c++/11/complex:401:35:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K<unresolved overloaded function type>[m[Kâ€™ to â€˜[01m[Kconst std::complex<Eigen::Matrix<double, -1, -1> >&[m[Kâ€™
[3.455s]   401 |     operator*([01;36m[Kconst complex<_Tp>& __x[m[K, const _Tp& __y)
[3.455s]       |               [01;36m[K~~~~~~~~~~~~~~~~~~~~^~~[m[K
[3.455s] [01m[K/usr/include/c++/11/complex:410:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)[m[Kâ€™
[3.455s]   410 |     [01;36m[Koperator[m[K*(const _Tp& __x, const complex<_Tp>& __y)
[3.455s]       |     [01;36m[K^~~~~~~~[m[K
[3.455s] [01m[K/usr/include/c++/11/complex:410:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.455s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::MatrixXd[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<double, -1, -1>[m[Kâ€™} is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
[3.456s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.456s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.456s] In file included from [01m[K/usr/include/eigen3/Eigen/Core:326[m[K,
[3.456s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
[3.456s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.456s] [01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:515:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MatrixDerived, class PermutationDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::PermutationBase<PermutationDerived>&)[m[Kâ€™
[3.456s]   515 | [01;36m[Koperator[m[K*(const MatrixBase<MatrixDerived> &matrix,
[3.456s]       | [01;36m[K^~~~~~~~[m[K
[3.456s] [01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:515:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.456s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™ and â€˜[01m[KEigen::DenseBase<Eigen::Matrix<double, -1, -1> >::ConstTransposeReturnType (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™ {aka â€˜[01m[Kconst Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™}
[3.456s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.456s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.456s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™ and â€˜[01m[KEigen::Transpose<Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)()[m[Kâ€™
[3.456s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::MatrixXd[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<double, -1, -1>[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::PermutationBase<PermutationDerived>[m[Kâ€™
[3.456s] In file included from [01m[K/usr/include/eigen3/Eigen/Core:326[m[K,
[3.456s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
[3.456s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.456s] [01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:527:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PermutationDerived, class MatrixDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::PermutationBase<PermutationDerived>&, const Eigen::MatrixBase<U>&)[m[Kâ€™
[3.457s]   527 | [01;36m[Koperator[m[K*(const PermutationBase<PermutationDerived> &permutation,
[3.457s]       | [01;36m[K^~~~~~~~[m[K
[3.457s] [01m[K/usr/include/eigen3/Eigen/src/Core/PermutationMatrix.h:527:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.457s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::PermutationBase<PermutationDerived>[m[Kâ€™ and â€˜[01m[KEigen::DenseBase<Eigen::Matrix<double, -1, -1> >::ConstTransposeReturnType (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™ {aka â€˜[01m[Kconst Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™}
[3.457s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.457s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.457s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::PermutationBase<PermutationDerived>[m[Kâ€™ and â€˜[01m[KEigen::Transpose<Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)()[m[Kâ€™
[3.457s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  couldnâ€™t deduce template parameter â€˜[01m[KPermutationDerived[m[Kâ€™
[3.457s] In file included from [01m[K/usr/include/eigen3/Eigen/Core:327[m[K,
[3.457s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
[3.457s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.457s] [01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:313:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MatrixDerived, class TranspositionsDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::TranspositionsBase<TranspositionsDerived>&)[m[Kâ€™
[3.457s]   313 | [01;36m[Koperator[m[K*(const MatrixBase<MatrixDerived> &matrix,
[3.457s]       | [01;36m[K^~~~~~~~[m[K
[3.457s] [01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:313:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.457s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™ and â€˜[01m[KEigen::DenseBase<Eigen::Matrix<double, -1, -1> >::ConstTransposeReturnType (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™ {aka â€˜[01m[Kconst Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™}
[3.457s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.457s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.457s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™ and â€˜[01m[KEigen::Transpose<Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)()[m[Kâ€™
[3.457s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::MatrixXd[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<double, -1, -1>[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::TranspositionsBase<TranspositionsDerived>[m[Kâ€™
[3.457s] In file included from [01m[K/usr/include/eigen3/Eigen/Core:327[m[K,
[3.457s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
[3.458s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.458s] [01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:325:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class TranspositionsDerived, class MatrixDerived> const Eigen::Product<MatrixDerived, PermutationDerived, 2> Eigen::operator*(const Eigen::TranspositionsBase<TranspositionsDerived>&, const Eigen::MatrixBase<U>&)[m[Kâ€™
[3.458s]   325 | [01;36m[Koperator[m[K*(const TranspositionsBase<TranspositionsDerived> &transpositions,
[3.458s]       | [01;36m[K^~~~~~~~[m[K
[3.458s] [01m[K/usr/include/eigen3/Eigen/src/Core/Transpositions.h:325:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.458s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::TranspositionsBase<TranspositionsDerived>[m[Kâ€™ and â€˜[01m[KEigen::DenseBase<Eigen::Matrix<double, -1, -1> >::ConstTransposeReturnType (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™ {aka â€˜[01m[Kconst Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™}
[3.458s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.458s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.458s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::TranspositionsBase<TranspositionsDerived>[m[Kâ€™ and â€˜[01m[KEigen::Transpose<Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)()[m[Kâ€™
[3.458s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  couldnâ€™t deduce template parameter â€˜[01m[KTranspositionsDerived[m[Kâ€™
[3.458s] In file included from [01m[K/usr/include/eigen3/Eigen/Householder:24[m[K,
[3.458s]                  from [01m[K/usr/include/eigen3/Eigen/QR:15[m[K,
[3.458s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:4[m[K,
[3.458s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.458s] [01m[K/usr/include/eigen3/Eigen/src/Householder/HouseholderSequence.h:513:99:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class OtherDerived, class VectorsType, class CoeffsType, int Side> typename Eigen::internal::matrix_type_times_scalar_type<typename VectorsType::Scalar, OtherDerived>::Type Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>&)[m[Kâ€™
[3.458s]   513 | typename internal::matrix_type_times_scalar_type<typename VectorsType::Scalar,OtherDerived>::Type [01;36m[Koperator[m[K*(const MatrixBase<OtherDerived>& other, const HouseholderSequence<VectorsType,CoeffsType,Side>& h)
[3.458s]       |                                                                                                   [01;36m[K^~~~~~~~[m[K
[3.458s] [01m[K/usr/include/eigen3/Eigen/src/Householder/HouseholderSequence.h:513:99:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.458s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™ and â€˜[01m[KEigen::DenseBase<Eigen::Matrix<double, -1, -1> >::ConstTransposeReturnType (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™ {aka â€˜[01m[Kconst Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™}
[3.458s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.458s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.458s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™ and â€˜[01m[KEigen::Transpose<Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)()[m[Kâ€™
[3.459s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::MatrixXd[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<double, -1, -1>[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::HouseholderSequence<VectorsType, CoeffsType, Side>[m[Kâ€™
[3.459s] In file included from [01m[K/usr/include/eigen3/Eigen/Geometry:46[m[K,
[3.459s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:6[m[K,
[3.459s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.459s] [01m[K/usr/include/eigen3/Eigen/src/Geometry/Scaling.h:135:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class Derived, class Scalar> Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, Scalar>, const Derived, const typename Eigen::internal::plain_constant_type<Expr, Scalar>::type> Eigen::operator*(const Eigen::MatrixBase<Derived>&, const Eigen::UniformScaling<Scalar>&)[m[Kâ€™
[3.459s]   135 | [01;36m[Koperator[m[K*(const MatrixBase<Derived>& matrix, const UniformScaling<Scalar>& s)
[3.459s]       | [01;36m[K^~~~~~~~[m[K
[3.459s] [01m[K/usr/include/eigen3/Eigen/src/Geometry/Scaling.h:135:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.459s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™ and â€˜[01m[KEigen::DenseBase<Eigen::Matrix<double, -1, -1> >::ConstTransposeReturnType (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™ {aka â€˜[01m[Kconst Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)() const[m[Kâ€™}
[3.459s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.459s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.459s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::MatrixBase<Derived>[m[Kâ€™ and â€˜[01m[KEigen::Transpose<Eigen::Matrix<double, -1, -1> > (Eigen::DenseBase<Eigen::Matrix<double, -1, -1> >::*)()[m[Kâ€™
[3.459s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::MatrixXd[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<double, -1, -1>[m[Kâ€™} is not derived from â€˜[01m[Kconst Eigen::UniformScaling<Scalar>[m[Kâ€™
[3.459s] In file included from [01m[K/usr/include/eigen3/Eigen/Core:19[m[K,
[3.459s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
[3.459s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.459s] [01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<double, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, double, Eigen::internal::scalar_product_op<T, double> > >::value>::type, double>, const typename Eigen::internal::plain_constant_type<Eigen::Transpose<Eigen::Matrix<double, -1, -1> >, typename Eigen::internal::promote_scalar_arg<double, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, double, Eigen::internal::scalar_product_op<T, double> > >::value>::type>::type, const Eigen::Transpose<Eigen::Matrix<double, -1, -1> > > Eigen::operator*(const T&, const StorageBaseType&)[m[Kâ€™
[3.459s]    50 | [01;36m[KEIGEN_MAKE_SCALAR_BINARY_OP[m[K(operator*,product)
[3.459s]       | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.459s] [01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.460s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  couldnâ€™t deduce template parameter â€˜[01m[KT[m[Kâ€™
[3.460s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.460s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.460s] In file included from [01m[K/usr/include/eigen3/Eigen/Core:19[m[K,
[3.460s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
[3.460s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.460s] [01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<double, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, double, Eigen::internal::scalar_product_op<T, double> > >::value>::type, double>, const typename Eigen::internal::plain_constant_type<Eigen::Transpose<const Eigen::Matrix<double, -1, -1> >, typename Eigen::internal::promote_scalar_arg<double, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, double, Eigen::internal::scalar_product_op<T, double> > >::value>::type>::type, const Eigen::Transpose<const Eigen::Matrix<double, -1, -1> > > Eigen::operator*(const T&, const StorageBaseType&)[m[Kâ€™
[3.460s]    50 | [01;36m[KEIGEN_MAKE_SCALAR_BINARY_OP[m[K(operator*,product)
[3.460s]       | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.460s] [01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.460s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  couldnâ€™t deduce template parameter â€˜[01m[KT[m[Kâ€™
[3.460s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.460s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.460s] In file included from [01m[K/usr/include/eigen3/Eigen/Core:19[m[K,
[3.460s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
[3.460s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.460s] [01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::promote_scalar_arg<double, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, double, Eigen::internal::scalar_product_op<T, double> > >::value>::type, double>, const typename Eigen::internal::plain_constant_type<Eigen::Matrix<double, -1, -1>, typename Eigen::internal::promote_scalar_arg<double, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<T, double, Eigen::internal::scalar_product_op<T, double> > >::value>::type>::type, const Eigen::Matrix<double, -1, -1> > Eigen::operator*(const T&, const StorageBaseType&)[m[Kâ€™
[3.460s]    50 | [01;36m[KEIGEN_MAKE_SCALAR_BINARY_OP[m[K(operator*,product)
[3.460s]       | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.460s] [01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:50:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.460s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:339:56:[m[K [01;36m[Knote: [m[K  couldnâ€™t deduce template parameter â€˜[01m[KT[m[Kâ€™
[3.460s]   339 |             MatrixXd matrixProduct = X_mat.transpose * [01;36m[KX_prime_mat[m[K;
[3.461s]       |                                                        [01;36m[K^~~~~~~~~~~[m[K
[3.483s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:361:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KT_ee_cam_temp[m[Kâ€™ was not declared in this scope
[3.483s]   361 |             [01;31m[KT_ee_cam_temp[m[K = pose * T_cam_world;
[3.483s]       |             [01;31m[K^~~~~~~~~~~~~[m[K
[3.491s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:381:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KT_cam_ee[m[Kâ€™ was not declared in this scope
[3.491s]   381 |             T_ee_cam_accumulator += [01;31m[KT_cam_ee[m[K;
[3.491s]       |                                     [01;31m[K^~~~~~~~[m[K
[3.830s] In file included from [01m[K/usr/include/eigen3/Eigen/Core:164[m[K,
[3.830s]                  from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
[3.830s]                  from [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:4[m[K:
[3.830s] /usr/include/eigen3/Eigen/src/Core/GeneralProduct.h: In instantiation of â€˜[01m[Kconst Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Matrix<double, 3, 3>][m[Kâ€™:
[3.830s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:350:82:[m[K   required from here
[3.830s] [01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:419:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: INVALID_MATRIX_PRODUCT
[3.831s]   419 |   [01;31m[KEIGEN_STATIC_ASSERT[m[K(ProductIsValid || SameSizes, INVALID_MATRIX_PRODUCT)
[3.831s]       |   [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[3.831s] [01m[K/usr/include/eigen3/Eigen/src/Core/GeneralProduct.h:419:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false || false)[m[Kâ€™ evaluates to false
[3.986s] /usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h: In instantiation of â€˜[01m[KEigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<double, double>; LhsType = const Eigen::Transpose<Eigen::Matrix<double, 3, 1> >; RhsType = const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Lhs = Eigen::Transpose<Eigen::Matrix<double, 3, 1> >; Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::Rhs = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>][m[Kâ€™:
[3.986s] [01m[K/usr/include/eigen3/Eigen/src/plugins/CommonCwiseBinaryOps.h:19:1:[m[K   required from â€˜[01m[Kconst Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>; Derived = Eigen::Transpose<Eigen::Matrix<double, 3, 1> >; typename Eigen::internal::traits<OtherDerived>::Scalar = double; typename Eigen::internal::traits<T>::Scalar = double][m[Kâ€™
[3.986s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:350:82:[m[K   required from here
[3.986s] [01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
[3.986s]   115 |       [01;31m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[K(Lhs, Rhs)
[3.986s]       |       [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.987s] [01m[K/usr/include/eigen3/Eigen/src/Core/CwiseBinaryOp.h:115:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Transpose<Eigen::Matrix<double, 3, 1> > >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0> >::ret) == 0)) || ((((((int)Eigen::Transpose<Eigen::Matrix<double, 3, 1> >::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Transpose<Eigen::Matrix<double, 3, 1> >::RowsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>::RowsAtCompileTime))) && (((((int)Eigen::Transpose<Eigen::Matrix<double, 3, 1> >::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Transpose<Eigen::Matrix<double, 3, 1> >::ColsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
[4.247s] /usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h: In instantiation of â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Transpose<Eigen::Matrix<double, 3, 1> >; Src = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>; Func = Eigen::internal::sub_assign_op<double, double>][m[Kâ€™:
[4.247s] [01m[K/usr/include/eigen3/Eigen/src/Core/ProductEvaluators.h:224:29:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::assignment_from_xpr_op_product<DstXprType, OtherXpr, ProductType, Func1, Func2>::run(DstXprType&, const SrcXprType&, const InitialFunc&) [with SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0> >; InitialFunc = Eigen::internal::assign_op<double, double>; DstXprType = Eigen::Transpose<Eigen::Matrix<double, 3, 1> >; OtherXpr = Eigen::Transpose<Eigen::Matrix<double, 3, 1> >; ProductType = Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>; Func1 = Eigen::internal::assign_op<double, double>; Func2 = Eigen::internal::sub_assign_op<double, double>][m[Kâ€™
[4.247s] [01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:890:49:[m[K   required from â€˜[01m[Kvoid Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<double, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0> >; Func = Eigen::internal::assign_op<double, double>][m[Kâ€™
[4.247s] [01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:797:41:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0> >; Derived = Eigen::Matrix<double, 3, 1>][m[Kâ€™
[4.247s] [01m[K/usr/include/eigen3/Eigen/src/Core/PlainObjectBase.h:594:19:[m[K   required from â€˜[01m[KEigen::PlainObjectBase<Derived>::PlainObjectBase(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0> >; Derived = Eigen::Matrix<double, 3, 1>][m[Kâ€™
[4.247s] [01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:423:29:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<double, double>, const Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, const Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0> >; _Scalar = double; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
[4.247s] [01m[K/home/parallels/calib_ws/src/hand_eye_calibration/src/calibration_node.cpp:350:82:[m[K   required from here
[4.247s] [01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
[4.247s]   887 |   [01;31m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[K(ActualDstTypeCleaned,Src)
[4.247s]       |   [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[4.247s] [01m[K/usr/include/eigen3/Eigen/src/Core/AssignEvaluator.h:887:3:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(((((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Transpose<Eigen::Matrix<double, 3, 1> > >::ret) == 0) && (((int)Eigen::internal::size_of_xpr_at_compile_time<Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0> >::ret) == 0)) || ((((((int)Eigen::Transpose<Eigen::Matrix<double, 3, 1> >::RowsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>::RowsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Transpose<Eigen::Matrix<double, 3, 1> >::RowsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>::RowsAtCompileTime))) && (((((int)Eigen::Transpose<Eigen::Matrix<double, 3, 1> >::ColsAtCompileTime) == ((int)Eigen::Dynamic)) || (((int)Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>::ColsAtCompileTime) == ((int)Eigen::Dynamic))) || (((int)Eigen::Transpose<Eigen::Matrix<double, 3, 1> >::ColsAtCompileTime) == ((int)Eigen::Product<Eigen::Matrix<double, 3, 3>, Eigen::Transpose<Eigen::Matrix<double, 3, 1> >, 0>::ColsAtCompileTime)))))[m[Kâ€™ evaluates to false
[4.600s] gmake[2]: *** [CMakeFiles/calibration_node.dir/build.make:76: CMakeFiles/calibration_node.dir/src/calibration_node.cpp.o] Error 1
[4.604s] gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/calibration_node.dir/all] Error 2
[4.605s] gmake: *** [Makefile:146: all] Error 2
[4.644s] Invoked command in '/home/parallels/calib_ws/build/hand_eye_calibration' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/humble /usr/bin/cmake --build /home/parallels/calib_ws/build/hand_eye_calibration -- -j2 -l2
